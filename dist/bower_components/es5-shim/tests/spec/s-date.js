describe("Date",function(){describe("now",function(){it("should be the current time",function(){expect(Date.now()===(new Date).getTime()).toBe(!0)})}),describe("parse",function(){it("should support extended years",function(){expect(Date.parse("0001-01-01T00:00:00Z")).toBe(-621355968e5),expect(Date.parse("+275760-09-13T00:00:00.000Z")).toBe(864e13),expect(Date.parse("+033658-09-27T01:46:40.000Z")).toBe(1e15),expect(Date.parse("-000001-01-01T00:00:00Z")).toBe(-621987552e5),expect(Date.parse("+002009-12-15T00:00:00Z")).toBe(12608352e5)}),it("should work",function(){expect(Date.parse("2012-11-31T23:59:59.000Z")).toBeFalsy(),expect(Date.parse("2012-12-31T23:59:59.000Z")).toBe(1356998399e3),expect(Date.parse("2012-12-31T23:59:60.000Z")).toBeFalsy(),expect(Date.parse("2012-04-04T05:02:02.170Z")).toBe(1333515722170),expect(Date.parse("2012-04-04T05:02:02.170999Z")).toBe(1333515722170),expect(Date.parse("2012-04-04T05:02:02.17Z")).toBe(1333515722170),expect(Date.parse("2012-04-04T05:02:02.1Z")).toBe(1333515722100),expect(Date.parse("2012-04-04T24:00:00.000Z")).toBe(1333584e6),expect(Date.parse("2012-04-04T24:00:00.500Z")).toBeFalsy(),expect(Date.parse("2012-12-31T10:08:60.000Z")).toBeFalsy(),expect(Date.parse("2012-13-01T12:00:00.000Z")).toBeFalsy(),expect(Date.parse("2012-12-32T12:00:00.000Z")).toBeFalsy(),expect(Date.parse("2012-12-31T25:00:00.000Z")).toBeFalsy(),expect(Date.parse("2012-12-31T24:01:00.000Z")).toBeFalsy(),expect(Date.parse("2012-12-31T12:60:00.000Z")).toBeFalsy(),expect(Date.parse("2012-12-31T12:00:60.000Z")).toBeFalsy(),expect(Date.parse("2012-00-31T23:59:59.000Z")).toBeFalsy(),expect(Date.parse("2012-12-00T23:59:59.000Z")).toBeFalsy(),expect(Date.parse("2012-02-29T12:00:00.000Z")).toBe(13305168e5),expect(Date.parse("2011-02-29T12:00:00.000Z")).toBeFalsy(),expect(Date.parse("2011-03-01T12:00:00.000Z")).toBe(12989808e5),expect(Date.parse("0000-01-01T00:00:00.000Z")).toBe(-621672192e5),expect(Date.parse("+275760-09-13T00:00:00.000Z")).toBe(864e13),expect(Date.parse("-271821-04-20T00:00:00.000Z")).toBe(-864e13),expect(Date.parse("+275760-09-13T00:00:00.001Z")).toBeFalsy(),expect(Date.parse("-271821-04-19T23:59:59.999Z")).toBeFalsy(),expect(Date.parse("2034-03-01T00:00:00.000Z")-Date.parse("2034-02-27T23:59:59.999Z")).toBe(86400001),expect(Date.parse("2012-01-29T12:00:00.000+01:00")).toBe(13278348e5),expect(Date.parse("2012-01-29T12:00:00.000-00:00")).toBe(13278384e5),expect(Date.parse("2012-01-29T12:00:00.000+00:00")).toBe(13278384e5),expect(Date.parse("2012-01-29T12:00:00.000+23:59")).toBe(132775206e4),expect(Date.parse("2012-01-29T12:00:00.000-23:59")).toBe(132792474e4),expect(Date.parse("2012-01-29T12:00:00.000+24:00")).toBeFalsy(),expect(Date.parse("2012-01-29T12:00:00.000+24:01")).toBeFalsy(),expect(Date.parse("2012-01-29T12:00:00.000+24:59")).toBeFalsy(),expect(Date.parse("2012-01-29T12:00:00.000+25:00")).toBeFalsy(),expect(Date.parse("2012-01-29T12:00:00.000+00:60")).toBeFalsy(),expect(Date.parse("-271821-04-20T00:00:00.000+00:01")).toBeFalsy(),expect(Date.parse("-271821-04-20T00:01:00.000+00:01")).toBe(-864e13);var e=Number(new Date(1970,0));expect(Date.parse("1970-01-01T00:00:00")).toBe(e)}),it("should be able to coerce to a number",function(){var e=Number(new Date(1970,0)),t=parseInt(e,10);expect(e).toBeDefined(),expect(e).toEqual(t),expect(isNaN(e)).toBeFalsy()})}),describe("toString",function(){var e=new Date(1970,0).toString();beforeEach(function(){e=new Date(1970,0).toString()}),it("should show correct date info for "+e,function(){expect(e).toMatch(/1970/),expect(e).toMatch(/jan/i),expect(e).toMatch(/thu/i),expect(e).toMatch(/00:00:00/)})}),describe("valueOf",function(){var e=new Date(1970,0);beforeEach(function(){e=new Date(1970,0).valueOf()}),it("should give an int value",function(){expect(parseInt(e,10)).toBeTruthy()})}),describe("toISOString",function(){it("should support extended years",function(){expect(new Date(-621987552e5).toISOString().indexOf("-000001-01-01")).toBe(0),expect(new Date(864e13).toISOString().indexOf("+275760-09-13")).toBe(0)}),it("should return correct dates",function(){expect(new Date(-1).toISOString()).toBe("1969-12-31T23:59:59.999Z"),expect(new Date(-0xc782b5b800cec).toISOString()).toBe("-109252-01-01T10:37:06.708Z")})}),describe("toJSON",function(){it("should call toISOString",function(){var e=new Date(0);e.toISOString=function(){return 1},expect(e.toJSON()).toBe(1)}),it("should return null for not finite dates",function(){var e,t=new Date(NaN);try{e=t.toJSON()}catch(a){}expect(e).toBe(null)}),it("should return the isoString when stringified",function(){var e=new Date;expect(JSON.stringify(e.toISOString())).toBe(JSON.stringify(e))})})});