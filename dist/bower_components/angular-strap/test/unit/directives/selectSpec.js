describe("select",function(){function e(e){e=e?d[e]:d["default"],angular.extend(t,e.scope);var a=angular.element(e.element).appendTo(i);return a=n(angular.element(a))(t),t.$digest(),s.flush(),a}var t,i,n,s,a,o;beforeEach(module("$strap.directives")),beforeEach(inject(function(e,d,c,l,r,u){t=d,n=c,s=l,a=r,o=u,i=angular.element('<div id="sandbox"></div>').appendTo("body")})),afterEach(function(){i.remove(),t.$destroy()});var d={"default":{scope:{items:[{id:"1",name:"foo"},{id:"2",name:"bar"},{id:"3",name:"baz"}],selectedItem:"2"},element:'<select ng-model="selectedItem" ng-options="value.id as value.name for (key, value) in items" bs-select ></select>'},validate:{scope:{items:[{id:"1",name:"foo"},{id:"2",name:"bar"},{id:"3",name:"baz"}],selectedItem:"2",isRequired:!1},element:'<form name="testForm"><select name="mySelect" ng-model="selectedItem" ng-options="value.id as value.name for (key, value) in items" ng-required="isRequired" bs-select></select></form>'}};describe("default template",function(){var i,n,s;beforeEach(function(){i=e(),n=i.next(".bootstrap-select"),s=n.find("ul[role=menu]")}),it("initialises bootstrap select on the element",function(){expect(n.length).toBe(1)}),it("adds every item to the bootstrap select menu",function(){expect(s.children().length).toBe(t.items.length)}),it("updates the bootstrap select menu when items are changed",function(){t.items.push({id:"4",name:"qux"}),t.$digest(),expect(s.children().length).toBe(t.items.length)}),it("selects the correct item by default",function(){expect(s.find(".selected").text()).toBe("bar")}),it("updates the scope when a new item is selected",function(){s.find("li a").first().click(),expect(t.selectedItem).toBe("1")}),it("updates bootstrap select when the model changes",function(){t.selectedItem="3",t.$digest(),expect(s.find(".selected").text()).toBe("baz")}),it("does not add ng-scope class to bootstrap select element",function(){expect(n.hasClass("ng-scope")).toBe(!1)}),it("updates bootstrap select when the option items change",function(){t.items.push({id:"4",name:"shock"}),t.selectedItem="4",t.$digest(),expect(s.find(".selected").text()).toBe("shock")})}),describe("validate template",function(){var i,n,s,a;beforeEach(function(){i=e("validate"),i=i.find("select"),n=i.next(".bootstrap-select"),a=n.find("ul[role=menu]"),t.$digest(),s=t.testForm.mySelect});var o=function(e){void 0===e&&(e=!0),expect(i.hasClass("ng-valid")).toBe(e),expect(i.hasClass("ng-valid-required")).toBe(e),expect(i.hasClass("ng-invalid")).toBe(!e),expect(i.hasClass("ng-invalid-required")).toBe(!e),expect(n.hasClass("ng-valid")).toBe(e),expect(n.hasClass("ng-valid-required")).toBe(e),expect(n.hasClass("ng-invalid")).toBe(!e),expect(n.hasClass("ng-invalid-required")).toBe(!e),expect(s.$valid).toBe(e),expect(s.$invalid).toBe(!e)};it("should be a valid element in the form",function(){expect(s).toBeDefined(),expect(s.$pristine).toBe(!0),expect(s.$dirty).toBe(!1),o()}),it("should set the selectPicker as required",function(){t.isRequired=!0,t.$digest(),expect(i.attr("required")).toBe("required")}),it("should be a valid element after a selection",function(){t.isRequired=!0,t.selectedItem="2",t.$digest(),expect(i.attr("required")).toBe("required"),o()}),it("should be an invalid element",function(){t.isRequired=!0,t.selectedItem=void 0,t.$digest(),expect(i.attr("required")).toBe("required"),o(!1)}),it("should become invalid when a selection is performed through click",function(){t.isRequired=!0,t.selectedItem=void 0,t.$digest(),a.find("li:nth-child(2) a").click(),expect(t.selectedItem).toBe("1"),o()})})});