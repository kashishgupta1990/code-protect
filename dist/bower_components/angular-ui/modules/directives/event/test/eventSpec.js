describe("uiEvent",function(){function e(e,t){return e._uiEvent=t||{},o('<span ui-event="_uiEvent">')(e)}var t,n,o;beforeEach(module("ui.directives")),beforeEach(inject(function(e,t){o=t,n=e})),describe("test",function(){it("should work with dblclick event and assignment",function(){t=n.$new();var o=e(t,{dblclick:"dbl=true"});expect(t.dbl).toBeUndefined(),o.trigger("dblclick"),expect(t.dbl).toBe(!0)}),it("should work with two events in one key a function",function(){t=n.$new(),t.counter=0,t.myfn=function(){t.counter++};var o=e(t,{"keyup mouseenter":"myfn()"});o.trigger("keyup"),o.trigger("mouseenter"),expect(t.counter).toBe(2)}),it("should work work with multiple entries",function(){t=n.$new(),t.amount=5;var o=e(t,{click:"amount=amount*2",mouseenter:"amount=amount*4",keyup:"amount=amount*3"});o.trigger("click"),expect(t.amount).toBe(10),o.trigger("mouseenter"),expect(t.amount).toBe(40),o.trigger("keyup"),expect(t.amount).toBe(120)}),it("should allow passing of $event object",function(){t=n.$new(),t.clicky=function(e,t,n){expect(t.foo).toBe("bar"),expect(e).toBe(1),expect(n).toBe(2)};var o=e(t,{click:"clicky(1, $event, 2)"});$(o).trigger({type:"click",foo:"bar"})}),it("should allow passing of $params object",function(){t=n.$new(),t.onStuff=function(e,t){expect(e.type).toBe("stuff"),expect(t[0]).toBe("foo"),expect(t[1]).toBe("bar")};var o=e(t,{stuff:"onStuff($event, $params)"});$(o).trigger("stuff",["foo","bar"])})})});