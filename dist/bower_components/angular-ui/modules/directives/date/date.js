angular.module("ui.directives").directive("uiDate",["ui.config",function(e){"use strict";var t;return t={},angular.isObject(e.date)&&angular.extend(t,e.date),{require:"?ngModel",link:function(t,r,n,a){var i=function(){return angular.extend({},e.date,t.$eval(n.uiDate))},u=function(){var e=i();if(a){var n=function(){t.$apply(function(){var e=r.datepicker("getDate");r.datepicker("setDate",r.val()),a.$setViewValue(e),r.blur()})};if(e.onSelect){var u=e.onSelect;e.onSelect=function(e,r){n(),t.$apply(function(){u(e,r)})}}else e.onSelect=n;r.bind("change",n),a.$render=function(){var e=a.$viewValue;if(angular.isDefined(e)&&null!==e&&!angular.isDate(e))throw new Error("ng-Model value must be a Date object - currently it is a "+typeof e+" - use ui-date-format to convert it from a string");r.datepicker("setDate",e)}}r.datepicker("destroy"),r.datepicker(e),a&&a.$render()};t.$watch(i,u,!0)}}}]).directive("uiDateFormat",["ui.config",function(e){var t={require:"ngModel",link:function(t,r,n,a){var i=n.uiDateFormat||e.dateFormat;i?(a.$formatters.push(function(e){return angular.isString(e)?$.datepicker.parseDate(i,e):void 0}),a.$parsers.push(function(e){return e?$.datepicker.formatDate(i,e):void 0})):(a.$formatters.push(function(e){return angular.isString(e)?new Date(e):void 0}),a.$parsers.push(function(e){return e?e.toISOString():void 0}))}};return t}]);