describe("uiKeypress",function(){var e,t,n=function(e,t,n,r){var i=jQuery.Event("keypress");return i.keyCode=e,i.altKey=t||!1,i.ctrlKey=n||!1,i.shiftKey=r||!1,i},r=function(n){var r=angular.isString(n)?n:angular.toJson(n);return t("<span ui-keypress='"+r+"'></span>")(e)};beforeEach(module("ui.directives")),beforeEach(inject(function(n,r){t=r,e=n.$new(),e.cb=function(e){this.event1=e}})),it("should support single key press",function(){r({13:"event=true"}).trigger(n(13)),expect(e.event).toBe(!0)}),it("should support combined key press",function(){r({"ctrl-shift-13":"event=true"}).trigger(n(13,!1,!0,!0)),expect(e.event).toBe(!0)}),it("should support alternative combinations",function(){e.event=0,r({"ctrl-shift-14 ctrl-shift-13":"event=event+1"}).trigger(n(13,!1,!0,!0)).trigger(n(14,!1,!0,!0)),expect(e.event).toBe(2)}),it("should support multiple key press definitions",function(){var t=r({13:"event1=true","ctrl-shift-13":"event2=true"});t.trigger(n(13)),expect(e.event1).toBe(!0),t.trigger(n(13,!1,!0,!0)),expect(e.event2).toBe(!0)}),it("should support $event in expressions",function(){var t=r({esc:"cb($event)",13:"event2=$event"});t.trigger(n(27)),expect(e.event1.keyCode).toBe(27),t.trigger(n(13)),expect(e.event2.keyCode).toBe(13)})});