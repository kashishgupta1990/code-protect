angular.module("ui.directives").directive("uiCodemirror",["ui.config","$timeout",function(e,r){"use strict";var n=["cursorActivity","viewportChange","gutterClick","focus","blur","scroll","update"];return{restrict:"A",require:"ngModel",link:function(t,i,o,a){var u,c,l,f,s;if("textarea"!==i[0].type)throw new Error("uiCodemirror3 can only be applied to a textarea element");u=e.codemirror||{},c=angular.extend({},u,t.$eval(o.uiCodemirror)),l=function(e){return function(r,n){var i=r.getValue();i!==a.$viewValue&&(a.$setViewValue(i),t.$apply()),"function"==typeof e&&e(r,n)}},f=function(){s=CodeMirror.fromTextArea(i[0],c),s.on("change",l(c.onChange));for(var e,u=0,f=n.length;f>u;++u)e=c["on"+n[u].charAt(0).toUpperCase()+n[u].slice(1)],void 0!==e&&"function"==typeof e&&s.on(n[u],e);a.$formatters.push(function(e){if(angular.isUndefined(e)||null===e)return"";if(angular.isObject(e)||angular.isArray(e))throw new Error("ui-codemirror cannot use an object or an array as a model");return e}),a.$render=function(){s.setValue(a.$viewValue)},o.uiRefresh&&t.$watch(o.uiRefresh,function(e,n){e!==n&&r(s.refresh)})},r(f)}}}]);