describe("uiRoute",function(){"use strict";function o(o){u.path(o),t.$broadcast("$routeChangeSuccess"),t.$apply()}function e(e){function u(o){var u=$(o);return e&&u.attr("ng-model",e),r(u[0])(t)}var i=e||"$uiRoute";describe("with uiRoute defined",function(){it("should use the uiRoute property",function(){u('<div ui-route="/foo">')}),it("should update model on $observe",function(){o("/bar"),t.$apply('foobar = "foo"'),u('<div ui-route="/{{foobar}}">'),expect(t[i]).toBeFalsy(),t.$apply('foobar = "bar"'),expect(t[i]).toBe(!0),t.$apply('foobar = "foo"'),expect(t[i]).toBe(!1)}),it("should support regular expression",function(){o("/foo/123"),u('<div ui-route="/foo/[0-9]*">'),expect(t[i]).toBe(!0)})}),describe("with ngHref defined",function(){it("should use the ngHref property",function(){o("/foo"),u('<a ng-href="/foo" ui-route>'),expect(t[i]).toBe(!0)}),it("should update model on $observe",function(){o("/bar"),t.$apply('foobar = "foo"'),u('<a ng-href="/{{foobar}}" ui-route>'),expect(t[i]).toBeFalsy(),t.$apply('foobar = "bar"'),expect(t[i]).toBe(!0),t.$apply('foobar = "foo"'),expect(t[i]).toBe(!1)})}),describe("with href defined",function(){it("should use the href property",function(){o("/foo"),u('<a href="/foo" ui-route>'),expect(t[i]).toBe(!0)})}),it("should throw an error if no route property available",function(){expect(function(){u("<div ui-route>")}).toThrow()}),it("should update model on route change",function(){o("/bar"),u('<div ui-route="/foo">'),expect(t[i]).toBeFalsy(),o("/foo"),expect(t[i]).toBe(!0),o("/bar"),expect(t[i]).toBe(!1)})}var t,r,u;beforeEach(module("ui.directives")),beforeEach(inject(function(o,e,i,n){t=o.$new(),r=e,u=n})),describe("model is null",function(){e()}),describe("model is set",function(){e("pizza")})});