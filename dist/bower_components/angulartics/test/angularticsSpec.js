describe("window.angulartics",function(){beforeEach(function(){jasmine.clock().install()}),afterEach(function(){delete window.angularticsTestVendor,jasmine.clock().uninstall()}),it("should manage vendor wait count",function(){spy=jasmine.createSpy("vendorCallback"),spyWhenLoaded=jasmine.createSpy("vendorCallbackWhenLoaded"),angulartics.waitForVendorApi("angularticsTestVendor",1,"loaded",spy),angulartics.waitForVendorApi("angularticsTestVendor",1,spyWhenLoaded),expect(window.angulartics.waitForVendorCount).toEqual(2),jasmine.clock().tick(1),expect(window.angulartics.waitForVendorCount).toEqual(2),window.angularticsTestVendor={},jasmine.clock().tick(1),expect(angulartics.waitForVendorCount).toEqual(1),window.angularticsTestVendor.loaded=!0,jasmine.clock().tick(1),expect(window.angulartics.waitForVendorCount).toEqual(0),expect(spyWhenLoaded).toHaveBeenCalledWith(window.angularticsTestVendor)})}),describe("Module: angulartics",function(){"use strict";beforeEach(module("angulartics")),describe("Configuration",function(){it("should configure virtualPageviews",function(){module(function(e){e.virtualPageviews(!1)}),inject(function(e){expect(e.settings.pageTracking.autoTrackVirtualPages).toBe(!1)})}),it("should be configured to use the <base> element",function(){var e="http://my/path";module(function(t,n){var a=document.createElement("base");a.setAttribute("href",e),document.getElementsByTagName("body")[0].appendChild(a),n.withBase(!0)}),inject(function(t){expect(t.settings.pageTracking.basePath).toBe(e)})}),it("should configure excluded routes",function(){module(function(e){e.excludeRoutes(["/abc/def"])}),inject(function(e){expect(e.settings.pageTracking.excludedRoutes).toEqual(["/abc/def"])})})}),describe("Provider: analytics",function(){describe("initialize",function(){it("should track pages by default",function(){inject(function(e){expect(e.settings.pageTracking.autoTrackVirtualPages).toBe(!0)})})}),describe("ngRoute support",function(){var e,t,n;beforeEach(module("ngRoute")),beforeEach(inject(function(a,c,o){e=a,n=o,t=c,spyOn(e,"pageTrack")})),it("should track pages on route change",function(){n.path("/abc"),t.$emit("$routeChangeSuccess"),expect(e.pageTrack).toHaveBeenCalledWith("/abc",n)})}),describe("ui-router support",function(){var e,t,n;beforeEach(module("ui.router")),beforeEach(inject(function(a,c,o){e=a,n=o,t=c,spyOn(e,"pageTrack")})),it("should track pages on route change",function(){n.path("/abc"),t.$emit("$stateChangeSuccess"),expect(e.pageTrack).toHaveBeenCalledWith("/abc",n)})}),describe("excludedRoutes",function(){var e,t,n;beforeEach(module("ui.router")),beforeEach(inject(function(a,c,o){e=a,n=o,t=c,spyOn(e,"pageTrack")})),it("should have empty excludedRoutes by default",function(){expect(e.settings.pageTracking.excludedRoutes.length).toBe(0)}),it("should trigger page track if excludeRoutes is empty",function(){e.settings.pageTracking.excludedRoutes=[],n.path("/abc"),t.$emit("$stateChangeSuccess"),expect(e.pageTrack).toHaveBeenCalledWith("/abc",n)}),it("should trigger page track if excludeRoutes do not match current route",function(){e.settings.pageTracking.excludedRoutes=["/def"],n.path("/abc"),t.$emit("$stateChangeSuccess"),expect(e.pageTrack).toHaveBeenCalledWith("/abc",n)}),it("should not trigger page track if current route is excluded",function(){e.settings.pageTracking.excludedRoutes=["/abc"],n.path("/abc"),t.$emit("$stateChangeSuccess"),expect(e.pageTrack).not.toHaveBeenCalled()}),it("should not allow for multiple route exclusions to be specified",function(){e.settings.pageTracking.excludedRoutes=["/def","/abc"],n.path("/abc"),t.$emit("$stateChangeSuccess"),expect(e.pageTrack).not.toHaveBeenCalled(),n.path("/def"),t.$emit("$stateChangeSuccess"),expect(e.pageTrack).not.toHaveBeenCalled(),n.path("/ghi"),t.$emit("$stateChangeSuccess"),expect(e.pageTrack).toHaveBeenCalledWith("/ghi",n)}),it("should allow specifying excluded routes as regular expressions",function(){e.settings.pageTracking.excludedRoutes=[/\/sections\/\d+\/pages\/\d+/],n.path("/sections/123/pages/456"),t.$emit("$stateChangeSuccess"),expect(e.pageTrack).not.toHaveBeenCalled()})})}),describe("$analyticsProvider",function(){describe("registration",function(){var e,t,n=["pageTrack","eventTrack","exceptionTrack","setUsername","setUserProperties","setUserPropertiesOnce","setSuperProperties","setSuperPropertiesOnce","userTimings"],a=function(e){return e.replace(/^./,function(e){return e.toUpperCase()})};beforeEach(function(){module(function(e){t=e}),inject(function(t){e=t})}),angular.forEach(n,function(n){it('should install a register function for "'+n+'" on $analyticsProvider',function(){var e=t["register"+a(n)];expect(e).toBeDefined(),expect(typeof e).toEqual("function")}),it('should expose a handler "'+n+'" on $analytics',function(){var t=e[n];expect(t).toBeDefined(),expect(typeof t).toEqual("function")})})})}),describe("$analytics",function(){describe("buffering",function(){var e,t,n;beforeEach(function(){module(function(e){t=e,t.settings.bufferFlushDelay=0}),inject(function(t){e=t})}),beforeEach(function(){n=jasmine.createSpy("eventTrackSpy")}),it("should buffer events if waiting on a vendor",function(){angulartics.waitForVendorCount++,e.eventTrack("foo"),e.eventTrack("bar"),t.registerEventTrack(n),expect(n.calls.count()).toEqual(2),expect(n.calls.argsFor(0)).toEqual(["foo"]),expect(n.calls.argsFor(1)).toEqual(["bar"])}),it("should not buffer events if not waiting on any vendors",function(){angulartics.waitForVendorCount=0,e.eventTrack("foo"),t.registerEventTrack(n),expect(n).not.toHaveBeenCalled()}),it("should continue to buffer events until all vendors are resolved",function(){angulartics.waitForVendorCount=2,e.eventTrack("foo"),t.registerEventTrack(n),expect(n).toHaveBeenCalledWith("foo"),e.eventTrack("bar"),expect(n.calls.count()).toEqual(2),expect(n.calls.argsFor(1)).toEqual(["bar"]);var a=jasmine.createSpy("secondVendor");t.registerEventTrack(a),expect(a.calls.count()).toEqual(2),expect(a.calls.argsFor(0)).toEqual(["foo"]),expect(a.calls.argsFor(1)).toEqual(["bar"])})})}),describe("Directive: analyticsOn",function(){function e(){inject(function(e){e(n)(a)}),a.$digest()}var t,n,a;beforeEach(inject(function(e,n){t=e,a=n.$new()})),it("should not send on and event fields to the eventTrack function",function(){n=angular.element("<div>").attr({"analytics-on":"click","analytics-event":"InitiateSearch","analytics-category":"Search"}),spyOn(t,"eventTrack"),expect(t.eventTrack).not.toHaveBeenCalled(),e(),n.triggerHandler("click"),expect(t.eventTrack).toHaveBeenCalledWith("InitiateSearch",{category:"Search",eventType:"click"})})})});