if("function"!=typeof define){var projectRoot=require("find-parent-dir").sync(__dirname,"package.json"),filesRoot=projectRoot;process.env.APP_DIR_FOR_CODE_COVERAGE&&(filesRoot+=process.env.APP_DIR_FOR_CODE_COVERAGE);var requirejs=require("requirejs"),expect=require("expect.js")}else var projectRoot="..",filesRoot="..";var cleanup,req;describe("build-query",function(){var e;before(function(t){(req=requirejs.config({context:Math.random().toString().slice(2),paths:{lib:filesRoot+"/lib",lodash:projectRoot+"/node_modules/lodash/lodash",metadata:projectRoot+"/test/mocks/lib/metadata",cleanup:projectRoot+"/test/cleanup"}}))(["lib/build-query","cleanup"],function(o,s){e=o,cleanup=s,t()})}),it("builds a query from a feature-detect",function(){var t=e({"feature-detects":["css/boxsizing"]});expect(t).to.be("?-boxsizing-dontmin")}),it("properly formats detects with multiple properties",function(){var t=e({"feature-detects":["dom/createElement-attrs"]});expect(t).to.be("?-createelementattrs_createelement_attrs-dontmin")}),it("adds options to the query",function(){var t=e({options:["mq"]});expect(t).to.be("?-mq-dontmin")}),it("adds classPrefix when setClasses is true as well",function(){var t=e({classPrefix:"TEST_PREFIX",options:["setClasses"]});expect(t).to.be("?-setclasses-dontmin-cssclassprefix:TEST_PREFIX")}),it("strips `html5` from the shiv options",function(){var t=e({options:["html5shiv"]});expect(t).to.be("?-shiv-dontmin")}),it("removes the dontmin option when minify is true",function(){var t=e({minify:!0});expect(t).to.be("?-")}),it("removes custom tests from the build query",function(){var t=e({"feature-detects":["css/boxsizing","custom/test/path"]});expect(t).to.be("?-boxsizing-dontmin")}),after(function(){cleanup()})});